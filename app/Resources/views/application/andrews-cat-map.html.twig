{% extends 'base.html.twig' %}

{% block body %}
    <canvas id="display" style="margin-top: -10px"></canvas>
    <div class="info"></div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script>

        var imgsrc = 'cat.png';

        var limits = {
            'cherry.png': 12,
            'cat.png': 348,
            'siciarek.jpg': 388
        };

        var limit = limits[imgsrc];
        var interval = null;
        var speed = 1;

        var pxsize = 1;
        var display = null;
        var c = null;

        var N;
        var grid = [];
        var buffer = [];

        var imageData = null;
        var data = null;

        var iteration = 0;

        function init() {
            var image = new Image();
            image.src = 'images/' + imgsrc;
            image.onload = function () {

                N = Math.min(this.width, this.height);

                display = document.getElementById('display');
                display.setAttribute('width', N * pxsize);
                display.setAttribute('height', N * pxsize);

                c = display.getContext('2d');
                c.drawImage(this, 0, 0, N * pxsize, N * pxsize);

                data = new Uint8ClampedArray(N * pxsize * N * pxsize * 4);
                imageData = c.getImageData(0, 0, N * pxsize, N * pxsize);

                for (var x = 0; x < N; x++) {
                    grid[x] = [];
                    buffer[x] = [];
                    for (var y = 0; y < N; y++) {

                        var i = (y * N + x) << 2;

                        var pix = [];
                        pix[0] = imageData.data[i + 0];
                        pix[1] = imageData.data[i + 1];
                        pix[2] = imageData.data[i + 2];
                        pix[3] = imageData.data[i + 3];

                        grid[x][y] = pix;
                        buffer[x][y] = null;
                    }
                }
            };
        }

        function redraw() {

            for (var row = 0; row < N; row++) {
                for (var col = 0; col < N; col++) {

                    var color = grid[col][row];

                    for (var y = 0; y < pxsize; y++) {
                        var dy = row * pxsize + y;
                        for (var x = 0; x < pxsize; x++) {
                            var dx = col * pxsize + x;

                            var i = (dy * N * pxsize + dx) << 2;

                            data[i + 0] = color[0];
                            data[i + 1] = color[1];
                            data[i + 2] = color[2];
                            data[i + 3] = color[3];
                        }
                    }
                }
            }

            imageData.data.set(data);
            c.putImageData(imageData, 0, 0);
        }


        function run() {
            redraw();
            interval = setInterval(function () {
                if (move() === false) {
                    clearInterval(interval);
                    iteration = 0;
                }
            }, speed);
        }


        function move() {
            var result = iterate();
            redraw();

            $('.info').html('iter. ' + iteration);

            return result;
        }

        function iterate() {

            for (x = 0; x < N; x++) {
                for (y = 0; y < N; y++) {
                    buffer[x][y] = T(mod(2 * x + y, N), mod(x + y, N));
                }
            }

            updateGrid();

            return ++iteration < limit;
        }

        function updateGrid() {
            for (x = 0; x < N; x++) {
                for (y = 0; y < N; y++) {
                    grid[x][y] = buffer[x][y];
                }
            }
        }

        function mod(value, N) {
            return value % N;
        }

        function T(x, y) {
            return grid[x][y];
        }

        $(document).ready(function(){
            $('#display').click(function(){
                run();
            });

            init();
        });

    </script>

{% endblock %}